From the very beginning, our discussion of the Maximum-Flow Problem has
been centered around the idea of an augmenting path in the residual graph.
However, there are some very powerful techniques for maximum flow that are
not explicitly based on augmenting paths. In this section we study one such
technique, the Preflow-Push Algorithm

Algorithms based on augmenting paths maintain a flow f , and use the augment
procedure to increase the value of the flow. By way of contrast, the Preflow-
Push Algorithm will, in essence, increase the flow on an edge-by-edge basis.
Changing the flow on a single edge will typically violate the conservation con-
dition, and so the algorithm will have to maintain something less well behaved
than a flow—something that does not obey conservation—as it operates.

As usual, this algorithm is somewhat underspecified. For an implementation
of the algorithm, we will have to specify which node with excess to choose,
and how to efficiently select an edge on which to push. However, it is clear
that each iteration of this algorithm can be implemented in polynomial time.
(We’ll discuss later how to implement it reasonably efficiently.) Further, it is
not hard to see that the preflow f and the labeling h are compatible throughout
the algorithm. If the algorithm terminates—something that is far from obvious
based on its description—then there are no nodes other than t with positive
excess, and hence the preflow f is in fact a flow. It then follows from (7.22)
that f would be a maximum flow at termination

Proof. By (7.23) the initial preflow f and labeling h are compatible. We will
show using induction on the number of push and relabel operations that
f and h satisfy the properties of the statement. The push operation modifies
the preflow f , but the bounds on δ guarantee that the f returned satisfies
the capacity constraints, and that excesses all remain nonnegative, so f is a
preflow. To see that the preflow f and the labeling h are compatible, note that
push(f , h, v, w) can add one edge to the residual graph, the reverse edge (v, w),
and this edge does satisfy the steepness condition. The relabel operation
increases the label of v, and hence increases the steepness of all edges leaving
v. However, it only applies when no edge leaving v in the residual graph is
going downward, and hence the preflow f and the labeling h are compatible
after relabeling